<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5e89e092-d556-4e2c-9a0b-5a5e6370500d" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FavoritesManager">
    <favorites_list name="playground" />
  </component>
  <component name="FindInProjectRecents">
    <replaceStrings>
      <replace />
    </replaceStrings>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1OjTvjIA5bC5EMZYXwXeR6RE8kZ" />
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="configurable.group.appearance" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.BasicSpec.A lab test actor should reply with cool tech in fancy way">
    <configuration name="BasicSpec.A blackhole actor should send back some message" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="playground" />
      <option name="allowRunningInParallel" value="false" />
      <option name="testKind" value="Class" />
      <option name="envs">
        <map />
      </option>
      <option name="javaOptions" value="" />
      <option name="jrePath" />
      <option name="searchTest" value="Across module dependencies" />
      <option name="showProgressMessages" value="true" />
      <option name="testArgs" value="" />
      <option name="testClassPath" value="BasicSpec" />
      <option name="testName" value="A blackhole actor should send back some message" />
      <option name="testPackagePath" value="" />
      <option name="useSbt" value="false" />
      <option name="useUiWithSbt" value="false" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BasicSpec.A lab test actor should reply with cool tech in fancy way" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="playground" />
      <option name="allowRunningInParallel" value="false" />
      <option name="testKind" value="Class" />
      <option name="envs">
        <map />
      </option>
      <option name="javaOptions" value="" />
      <option name="jrePath" />
      <option name="searchTest" value="Across module dependencies" />
      <option name="showProgressMessages" value="true" />
      <option name="testArgs" value="" />
      <option name="testClassPath" value="BasicSpec" />
      <option name="testName" value="A lab test actor should reply with cool tech in fancy way" />
      <option name="testPackagePath" value="" />
      <option name="useSbt" value="false" />
      <option name="useUiWithSbt" value="false" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BasicSpec.A lab test actor should turn a string into uppercase" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="playground" />
      <option name="allowRunningInParallel" value="false" />
      <option name="testKind" value="Class" />
      <option name="envs">
        <map />
      </option>
      <option name="javaOptions" value="" />
      <option name="jrePath" />
      <option name="searchTest" value="Across module dependencies" />
      <option name="showProgressMessages" value="true" />
      <option name="testArgs" value="" />
      <option name="testClassPath" value="BasicSpec" />
      <option name="testName" value="A lab test actor should turn a string into uppercase" />
      <option name="testPackagePath" value="" />
      <option name="useSbt" value="false" />
      <option name="useUiWithSbt" value="false" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BasicSpec.A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="playground" />
      <option name="allowRunningInParallel" value="false" />
      <option name="testKind" value="Class" />
      <option name="envs">
        <map />
      </option>
      <option name="javaOptions" value="" />
      <option name="jrePath" />
      <option name="searchTest" value="Across module dependencies" />
      <option name="showProgressMessages" value="true" />
      <option name="testArgs" value="" />
      <option name="testClassPath" value="BasicSpec" />
      <option name="testName" value="A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting" />
      <option name="testPackagePath" value="" />
      <option name="useSbt" value="false" />
      <option name="useUiWithSbt" value="false" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BasicSpec.A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting&#10;A lab test actor should reply with favorite tech" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="playground" />
      <option name="allowRunningInParallel" value="false" />
      <option name="testKind" value="Class" />
      <option name="envs">
        <map />
      </option>
      <option name="javaOptions" value="" />
      <option name="jrePath" />
      <option name="searchTest" value="Across module dependencies" />
      <option name="showProgressMessages" value="true" />
      <option name="testArgs" value="" />
      <option name="testClassPath" value="BasicSpec" />
      <option name="testName" value="A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting&#10;A lab test actor should reply with favorite tech" />
      <option name="testPackagePath" value="" />
      <option name="useSbt" value="false" />
      <option name="useUiWithSbt" value="false" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.BasicSpec.A lab test actor should reply with cool tech in fancy way" />
        <item itemvalue="ScalaTest.BasicSpec.A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting&#10;A lab test actor should reply with favorite tech" />
        <item itemvalue="ScalaTest.BasicSpec.A lab test actor should turn a string into uppercase&#10;A lab test actor should reply to a greeting" />
        <item itemvalue="ScalaTest.BasicSpec.A lab test actor should turn a string into uppercase" />
        <item itemvalue="ScalaTest.BasicSpec.A blackhole actor should send back some message" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="playground" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="playground [file:/Users/nicholas/Desktop/scala/playground/]" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="playground-build" />
                <option name="path" value="$PROJECT_DIR$/project" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$" value="3128561289946" />
        <entry key="$PROJECT_DIR$/build.sbt" value="3732925655" />
        <entry key="$PROJECT_DIR$/project/build.properties" value="1396028727" />
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$USER_HOME$/Downloads/example" value="PREVIEW" />
        <entry key="$USER_HOME$/code/akka-quickstart-scala" value="PREVIEW" />
        <entry key="$USER_HOME$/code/scala-http4sg8-quickstart" value="PREVIEW" />
        <entry key="$USER_HOME$/sandbox/myapp/myapp" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5e89e092-d556-4e2c-9a0b-5a5e6370500d" name="Default Changelist" comment="" />
      <created>1561731730284</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561731730284</updated>
      <workItem from="1561731733476" duration="4614000" />
      <workItem from="1561971951970" duration="6059000" />
      <workItem from="1561987461333" duration="13483000" />
      <workItem from="1562772180865" duration="92000" />
      <workItem from="1563971028219" duration="2194000" />
      <workItem from="1564490240907" duration="1741000" />
      <workItem from="1564999159760" duration="3904000" />
      <workItem from="1565255184229" duration="9000" />
      <workItem from="1566224404826" duration="9873000" />
      <workItem from="1566485822046" duration="23628000" />
      <workItem from="1566811824307" duration="4000" />
      <workItem from="1566829529929" duration="3420000" />
      <workItem from="1566896697806" duration="2178000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>